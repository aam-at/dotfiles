" show the matching part of the pair for [] {} and ()
set matchpairs
" message on status line to show current mode
set showmode
" no ignore case when pattern has uppercase
set smartcase
" show line numbers
set relativenumber
" use visual bell instead of beeping
set visualbell
" searching
set hlsearch                                        "highlight searches
set incsearch                                       "incremental searching
set ignorecase                                      "ignore case for searching
set smartcase                                       "do case-sensitive if there's a capital letter

" Rebind <Leader> key
" I like to have it here becuase it is easier to reach than the default and
" it is next to ``m`` and ``n`` which I use for navigating between tabs.
let mapleader = ","

" Learn vim hard way
noremap <Up> <NOP>
noremap <Down> <NOP>
noremap <Left> <NOP>
noremap <Right> <NOP> 
inoremap <Up> <NOP> 
inoremap <Down> <NOP> 
inoremap <Left> <NOP> 
inoremap <Right> <NOP> 

" This makes j and k work on "screen lines" instead of on "file lines"; now, when
" we have a long line that wraps to multiple screen lines, j and k behave as we
" expect them to.
nnoremap j gj
nnoremap k gk

" Shortcuts for splits
nnoremap <leader>v <C-w>v<C-w>l
nnoremap <leader>s <C-w>s

" bind Ctrl+<movement> keys to move around the windows, instead of using Ctrl+w + <movement>
" Every unnecessary keystroke that can be saved is good for your health :)
map <c-j> <c-w>j
map <c-k> <c-w>k
map <c-l> <c-w>l
map <c-h> <c-w>h

" Tab navigation
map <Leader>n gT
map <Leader>m gt
" Rotate current active tab to opposite side
map gr :action MoveEditorToOppositeTabGroup<CR>

" Fast vim like window closing
nnoremap <Leader>q :action CloseEditor<CR>
nnoremap <Leader>Q :action CloseAllEditors<CR>

" Emuluate vim-bookmarks plugin
nmap ma :action ShowBookmarks<CR>
nmap mm :action ToggleBookmark<CR>
nmap mi :action ToggleBookmarkWithMnemonic<CR>
nmap mn :action GotoNextBookmark<CR>
nmap mp :action GotoPreviousBookmark<CR>

" Fold code
nmap zm :action CollapseAllRegions<CR>
nmap zr :action ExpandAllRegions<CR>

" Comment code
vmap gc :action CommentByLineComment<CR>
nmap gcc :action CommentByLineComment<CR>

" Access to refactorings inside vim
nnoremap <Leader>rm :action Refactorings.QuickListPopupAction<CR>
nnoremap <Leader>rf :action ReformatCode<CR>
nnoremap <Leader>ro :action OptimizeImports<CR>
nnoremap <Leader>rr :action RenameElement<CR>

" Open code inspection: pycharm internal linter
nmap <Leader>ri :action InspectCode<CR>

" Some pymode like navigation
nnoremap [[ :action MethodUp<CR>
nnoremap ]] :action MethodDown<CR>
vmap [[ :action MethodUp<CR>
vmap ]] :action MethodDown<CR>

" GotoClass shorcut
nnoremap <Leader>c :action GotoClass<CR>
" Emulate CtlrP plugin
nnoremap <c-p> :action GotoFile<CR>

" Behavior like jedi-vim plugin
nnoremap <Leader>d :action GotoDeclaration<CR>
nnoremap <Leader>z :action FindUsages<CR>
" Quick inline documentation
nnoremap K :action QuickJavaDoc<CR>
" Insert break point
nnoremap <Leader>b Aimport ipdb; ipdb.set_trace()  # XXX BREAKPOINT<Esc>
