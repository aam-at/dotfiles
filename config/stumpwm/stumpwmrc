;; -*-lisp-*-
;;
;; Here is a sample .stumpwmrc file

(in-package :stumpwm)

;;;;;;;;;;;;;;;;;;
;; Custom commands
;;;;;;;;;;;;;;;;;;

;; prompt the user for an interactive command. The first arg is an
;; optional initial contents.
(defcommand colon1 (&optional (initial "")) (:rest)
  (let ((cmd (read-one-line (current-screen) ": " :initial-input initial)))
    (when cmd
      (eval-command cmd t))))
(defcommand firefox () ()
  "run firefox"
  (run-or-raise "firefox" '(:class "Firefox")))
(defcommand chrome () ()
  "run google chrome"
  (run-or-raise "google-chrome" '(:instance "google-chrome")))
(defcommand skype () ()
  "run skype"
  (run-or-raise "skype" '(:instance "skype")))
(defcommand vol-up () ()
  "Increase the volume from the shell"
  (run-shell-command
   "amixer -D pulse sset Master 5%+"))
(defcommand vol-down () ()
  "Decrease the volume  from the shell"
  (run-shell-command
   "amixer -D pulse sset Master 5%-"))
(defcommand vol-mute () ()
  "toggle mute"
  (run-shell-command
   "amixer -q -D pulse sset Master toggle"))

;; Custom menu
(defcommand mymenu () ()
  (labels ((pick (options)
                 (let ((selection (stumpwm::select-from-menu (current-screen) options "")))
                   (cond
                    ((null selection)
                     (throw 'stumpwm::error "Abort."))
                    ((stringp (second selection))
                     (second selection))
                    (t
                     (pick (cdr selection)))))))
    (let ((choice (pick *app-menu*)))
      (run-shell-command choice))))
(defparameter *app-menu* '(("Audio/Video"
                            ("VLC" "vlc"))
                           ("Internet"
                            ("Chrome" "google-chrome")
                            ("Firefox" "firefox")
                            ("Conkeror" "conkeror"))
                           ("Office Applications"
                            ("Emacs" "emacs")
                            ("Libre Office" "libreoffice"))
                           ("System Tools"
                            ("Network Connections" "nm-connection-editor")
                            )))

;; Web jump (works for Google and Imdb)
(defmacro make-web-jump (name prefix)
  `(defcommand ,(intern name) (search) ((:rest ,(concatenate 'string name " search: ")))
     (substitute #\+ #\Space search)
     (run-shell-command (concatenate 'string ,prefix search))))

(make-web-jump "google" "google-chrome http://www.google.com/search?q=")

;;;;;;;;;;;;;;
;; Define keys
;;;;;;;;;;;;;;

;; Browse somewhere
(define-key *root-map* (kbd "b") "colon1 exec chrome http://www.")
;; Ssh somewhere
(define-key *root-map* (kbd "C-s") "colon1 exec xterm -e ssh ")
;; Lock screen
(define-key *root-map* (kbd "C-l") "exec gnome-screensaver-command -l")
;; Google
(define-key *root-map* (kbd "M-s") "google")
;; Multimedia
(define-key *root-map* (kbd "XF86AudioLowerVolume")   "vol-down")
(define-key *root-map* (kbd "XF86AudioRaiseVolume")   "vol-up")
(define-key *root-map* (kbd "C-(")  "vol-down")
(define-key *root-map* (kbd "C-)")  "vol-up")
(define-key *root-map* (kbd "C-*")  "vol-mute")
(define-key *root-map* (kbd "Print")
  "exec import -window root png:$HOME/screenshot_$(date +%F_%H-%M-%S).png")
;; Custom menu
(define-key *root-map* (kbd ".") "mymenu")

;;;;;;;;;;;;;;;;;;;
;; Startup programs
;;;;;;;;;;;;;;;;;;;

(run-shell-command "pulseaudio --start")
(run-shell-command "xmodmap ~/.xmodmap")
(run-shell-command "/usr/bin/gnome-keyring-daemon --start --components=ssh")
(run-shell-command "/usr/bin/gnome-keyring-daemon --start --components=gpg")
(run-shell-command "guake -e tmux")
(run-shell-command "dropbox start")
(run-shell-command "redshift")

;;;;;;;;;;;;;;;;;;;;
;; Visual appearance
;;;;;;;;;;;;;;;;;;;;

;; Message window font
(set-font "-xos4-terminus-medium-r-normal--14-140-72-72-c-80-iso8859-15")
