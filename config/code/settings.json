{
    "workbench.editorAssociations": {
        "*.ipynb": "jupyter-notebook"
    },
    "keyboard.dispatch": "keyCode",
    "editor.fontFamily": "'JetBrains Mono'",
    "editor.fontSize": 13,
    "editor.fontLigatures": true,
    "editor.smoothScrolling": true,
    "python.languageServer": "Pylance",
    "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    "vim.useCtrlKeys": true,
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        },
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        }
    ],
    "explorer.confirmDelete": false,
    "editor.lineNumbers": "relative",
    "latex-workshop.view.pdf.viewer": "tab",
    "editor.inlineSuggest.enabled": true,
    "notebook.cellToolbarLocation": {
        "default": "right",
        "jupyter-notebook": "left"
    },
    "redhat.telemetry.enabled": true,
    "[python]": {
        "editor.defaultFormatter": "ms-python.black-formatter",
        "editor.formatOnSave": true,
        "editor.codeActionsOnSave": {
            "source.organizeImports": "explicit"
        },
        "editor.formatOnType": true,
    },
    "isort.args": [
        "--profile",
        "black"
    ],
    "vim.handleKeys": {
        "<C-f>": true,
        "<C-b>": true,
        "<C-a>": true,
        "<C-e>": true,
        "<C-d>": true,
    },
    "vim.insertModeKeyBindings": [
        {
            "before": [
                "<C-f>"
            ],
            "after": [
                "<right>"
            ]
        },
        {
            "before": [
                "<C-b>"
            ],
            "after": [
                "<left>"
            ]
        },
        {
            "before": [
                "alt-b"
            ],
            "after": [
                "<left>"
            ]
        },
        {
            "before": [
                "<C-a>"
            ],
            "commands": [
                {
                    "command": "cursorHome",
                    "when": "editorTextFocus"
                }
            ]
        },
        {
            "before": [
                "<C-e>"
            ],
            "commands": [
                {
                    "command": "cursorEnd",
                    "when": "editorTextFocus"
                }
            ]
        },
        {
            "before": [
                "<C-d>"
            ],
            "commands": [
                {
                    "command": "deleteRight",
                    "when": "editorTextFocus && !editorReadonly"
                }
            ]
        }
    ],
    "workbench.colorTheme": "Gruvbox Dark Medium",
    "workbench.iconTheme": "vscode-icons",
    "python.analysis.completeFunctionParens": true,
    "syntax.highlightLanguages": [
        "c",
        "cpp",
        "python",
        "typescript",
        "typescriptreact",
        "javascript",
        "go",
        "rust",
        "php",
        "ruby",
        "shellscript",
        "ocaml",
        "lua"
    ],
    "files.exclude": {
        "**/.trunk/*actions/": true,
        "**/.trunk/*logs/": true,
        "**/.trunk/*notifications/": true,
        "**/.trunk/*out/": true,
        "**/.trunk/*plugins/": true
    },
    "trunk.trunkGrayOutNonBlockingIssues": false,
    "files.watcherExclude": {
        "**/.trunk/*actions/": true,
        "**/.trunk/*logs/": true,
        "**/.trunk/*notifications/": true,
        "**/.trunk/*out/": true,
        "**/.trunk/*plugins/": true
    },
    "editor.defaultFormatter": "trunk.io",
    "files.autoSave": "onWindowChange",
    "[latex]": {
        "editor.defaultFormatter": "James-Yu.latex-workshop"
    },
    "diffEditor.codeLens": true,
    "[jsonc]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "vscode.typescript-language-features"
    },
    "editor.multiCursorModifier": "ctrlCmd",
    "github.copilot.advanced": {
        "useLanguageServer": true,
    },
    "github.copilot.chat.edits.enabled": true,
    "github.copilot.chat.followUps": "always",
    "github.copilot.chat.search.semanticTextResults": true,
    "github.copilot.chat.useProjectTemplates": true,
    "github.copilot.chat.codeGeneration.instructions": [
        // {
        //   "text": "I want you to act as a proofreader for academic texts. You will be provided with an academic text intended for submission to top machine learning conferences, such as ICML, NeurIPS and CVPR. Your task is to proofread the text and provide detailed corrections and suggestions.\n Here are the specific tasks you need to accomplish:\n 1) Identify and correct any spelling, grammar, and punctuation errors.\n 2. Suggest improvements to enhance clarity and readability.\n 3. Ensure that the text aligns with the standards expected at top machine learning venues.\n 4. Provide detailed explanations for each correction and suggestion.\n The text for review will be provided below:"
        // }
        {
          "text": "I want you to act as a mathematician. You will be provided with a mathematical problem and my solution to the problem. Your task is to verify my solution and improve the mathematical notation of my solution for publication at ICML, NeurIPS or ICLR conference. The proof should adhere to the highest quality standards for publication in a prestigious mathematical journal.",
        }
    ],
    "geminicodeassist.project": "cpgd-301214",
    "github.copilot.chat.editor.temporalContext.enabled": true,
    "github.copilot.nextEditSuggestions.enabled": true,
}
